services:

  db:
    shm_size: 512mb
    image: postgres:17
    restart: unless-stopped
    user: "1000:1000"
    env_file:
     - ./.env.docker
    volumes:
     - ./pgdata:/var/lib/postgresql/data
    networks:
      - pf_network

  redis:
    image: redis:6.2
    restart: unless-stopped
    env_file:
     - ./.env.docker
    volumes:
     - redis_data:/data
    networks:
      - pf_network

  celery:
    build:
      context: .
      target: builder
    container_name: piefed_celery1
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file:
     - ./.env.docker
    entrypoint: ./entrypoint_celery.sh
    volumes:
     - ./media/:/app/app/static/media/
     - ./logs/:/app/logs/
     - ./tmp/:/app/app/static/tmp/
    networks:
      - pf_network
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_worker_docker.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  web:
    build:
      context: .
      target: builder
    container_name: piefed_app1
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file:
     - ./.env.docker
    volumes:
     - ./gunicorn.conf.py:/app/gunicorn.conf.py
     - ./media/:/app/app/static/media/
     - ./logs/:/app/logs/
     - ./tmp/:/app/app/static/tmp/
    ports:
      - '8030:5000'
    networks:
      - pf_network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "gunicorn"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

# git clone https://codeberg.org/PieFed/piefed-notifs into a directory beside the pyfedi one to enable real-time notifications.

#  piefednotifs:
#    build:
#      context: ../piefed-notifs
#      dockerfile: Dockerfile
#    container_name: piefed_notifs
#    restart: unless-stopped
#    depends_on:
#      - redis
#    env_file:
#      - ../piefed-notifs/.env
#    ports:
#      - "8040:8000"   # host:container, Piefed-Notifs runs on 8000 internally
#    networks:
#      - pf_network



  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8888:8080
    depends_on:
      - db
    networks:
      - pf_network


networks:
  pf_network:
    name: pf_network
    external: false

volumes:
  redis_data:
