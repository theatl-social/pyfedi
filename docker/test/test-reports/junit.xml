<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="207" failures="49" skipped="0" tests="311" time="25.120" timestamp="2025-08-01T22:29:17.745988+00:00" hostname="b83da7f8a05f"><testcase classname="tests.test_activitypub_routes.TestActorRoutes" name="test_user_actor_json" time="0.393"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 18, 443978), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 18, 443978), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestActorRoutes" name="test_community_actor_json" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 18, 830546), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 18, 830546), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestActorRoutes" name="test_server_actor" time="0.003"><failure message="AttributeError: site">/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:62: in test_server_actor
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:902: in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/main/routes.py:988: in instance_actor
    'publicKeyPem': g.site.public_key
                    ^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:56: in __getattr__
    raise AttributeError(name) from None
E   AttributeError: site</failure></testcase><testcase classname="tests.test_activitypub_routes.TestInboxRoutes" name="test_shared_inbox_post" time="0.002"><failure message="AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'">/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:87: in test_shared_inbox_post
    ???
/usr/local/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestInboxRoutes" name="test_user_inbox" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 19, 343581), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 19, 343581), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestInboxRoutes" name="test_community_inbox" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 19, 746494), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 19, 746494), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestOutboxRoutes" name="test_user_outbox_get" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 106371), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 106371), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestOutboxRoutes" name="test_user_outbox_paged" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 459777), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 459777), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestOutboxRoutes" name="test_community_outbox" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 813121), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 20, 813121), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestObjectRoutes" name="test_post_object" time="0.001"><error message="failed on setup with &quot;file /Users/michael/code/pyfedi/tests/test_activitypub_routes.py, line 199: source code not available&#10;E       fixture 'test_post' not found&#10;&gt;       available fixtures: _configure_application, _db, _monkeypatch_response_class, _push_request_context, _session_event_loop, _session_faker, accept_any, accept_json, accept_jsonp, accept_mimetype, admin_user, anyio_backend, anyio_backend_name, anyio_backend_options, ap_actor_data, ap_create_activity, app, async_session, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cleanup, client, client_class, config, cov, db_session, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, live_server, mock_httpx, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, redis_client, session, session_mocker, test_community, test_instance, test_user, tests/test_activitypub_routes.py::&lt;event_loop&gt;, tests/test_activitypub_routes.py::TestObjectRoutes::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:199&quot;">file /Users/michael/code/pyfedi/tests/test_activitypub_routes.py, line 199: source code not available
E       fixture 'test_post' not found
&gt;       available fixtures: _configure_application, _db, _monkeypatch_response_class, _push_request_context, _session_event_loop, _session_faker, accept_any, accept_json, accept_jsonp, accept_mimetype, admin_user, anyio_backend, anyio_backend_name, anyio_backend_options, ap_actor_data, ap_create_activity, app, async_session, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cleanup, client, client_class, config, cov, db_session, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, live_server, mock_httpx, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, redis_client, session, session_mocker, test_community, test_instance, test_user, tests/test_activitypub_routes.py::&lt;event_loop&gt;, tests/test_activitypub_routes.py::TestObjectRoutes::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:199</error></testcase><testcase classname="tests.test_activitypub_routes.TestObjectRoutes" name="test_comment_object" time="0.001"><error message="failed on setup with &quot;file /Users/michael/code/pyfedi/tests/test_activitypub_routes.py, line 210: source code not available&#10;E       fixture 'test_post' not found&#10;&gt;       available fixtures: _configure_application, _db, _monkeypatch_response_class, _push_request_context, _session_event_loop, _session_faker, accept_any, accept_json, accept_jsonp, accept_mimetype, admin_user, anyio_backend, anyio_backend_name, anyio_backend_options, ap_actor_data, ap_create_activity, app, async_session, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cleanup, client, client_class, config, cov, db_session, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, live_server, mock_httpx, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, redis_client, session, session_mocker, test_community, test_instance, test_user, tests/test_activitypub_routes.py::&lt;event_loop&gt;, tests/test_activitypub_routes.py::TestObjectRoutes::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:210&quot;">file /Users/michael/code/pyfedi/tests/test_activitypub_routes.py, line 210: source code not available
E       fixture 'test_post' not found
&gt;       available fixtures: _configure_application, _db, _monkeypatch_response_class, _push_request_context, _session_event_loop, _session_faker, accept_any, accept_json, accept_jsonp, accept_mimetype, admin_user, anyio_backend, anyio_backend_name, anyio_backend_options, ap_actor_data, ap_create_activity, app, async_session, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cleanup, client, client_class, config, cov, db_session, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, live_server, mock_httpx, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, redis_client, session, session_mocker, test_community, test_instance, test_user, tests/test_activitypub_routes.py::&lt;event_loop&gt;, tests/test_activitypub_routes.py::TestObjectRoutes::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:210</error></testcase><testcase classname="tests.test_activitypub_routes.TestCollectionRoutes" name="test_user_followers" time="0.002"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 170664), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 170664), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestCollectionRoutes" name="test_user_following" time="0.002"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 527018), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 527018), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestCollectionRoutes" name="test_community_followers" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 882983), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 21, 882983), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestCollectionRoutes" name="test_liked_collection" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 242285), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 242285), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestActivitiesRoutes" name="test_activity_view" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;instance_id&quot; of relation &quot;activity_pub_log&quot; does not exist&#10;LINE 1: ...ctivity_id, activity_type, result, activity_json, instance_i...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO activity_pub_log (direction, activity_id, activity_type, result, activity_json, instance_id, exception_message, created_at, updated_at) VALUES (%(direction)s, %(activity_id)s, %(activity_type)s, %(result)s, %(activity_json)s, %(instance_id)s, %(exception_message)s, %(created_at)s, %(updated_at)s) RETURNING activity_pub_log.id]&#10;[parameters: {'direction': 'in', 'activity_id': 'https://test.instance/activities/Like/123', 'activity_type': 'Like', 'result': None, 'activity_json': '{&quot;type&quot;: &quot;Like&quot;, &quot;actor&quot;: &quot;https://example.com/users/test&quot;, &quot;object&quot;: &quot;https://test.instance/posts/1&quot;}', 'instance_id': None, 'exception_message': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 589265, tzinfo=datetime.timezone.utc), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "instance_id" of relation "activity_pub_log" does not exist
E   LINE 1: ...ctivity_id, activity_type, result, activity_json, instance_i...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:293: in test_activity_view
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "instance_id" of relation "activity_pub_log" does not exist
E   LINE 1: ...ctivity_id, activity_type, result, activity_json, instance_i...
E                                                                ^
E   
E   [SQL: INSERT INTO activity_pub_log (direction, activity_id, activity_type, result, activity_json, instance_id, exception_message, created_at, updated_at) VALUES (%(direction)s, %(activity_id)s, %(activity_type)s, %(result)s, %(activity_json)s, %(instance_id)s, %(exception_message)s, %(created_at)s, %(updated_at)s) RETURNING activity_pub_log.id]
E   [parameters: {'direction': 'in', 'activity_id': 'https://test.instance/activities/Like/123', 'activity_type': 'Like', 'result': None, 'activity_json': '{"type": "Like", "actor": "https://example.com/users/test", "object": "https://test.instance/posts/1"}', 'instance_id': None, 'exception_message': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 589265, tzinfo=datetime.timezone.utc), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_activitypub_routes.TestFeedRoutes" name="test_user_feed" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 947313), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 22, 947313), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestNodeInfoRoutes" name="test_nodeinfo_wellknown" time="0.005"><failure message="Exception: Missing user_loader or request_loader. Refer to http://flask-login.readthedocs.io/#how-it-works for more info.">/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:891: in dispatch_request
    self.raise_routing_exception(req)
/usr/local/lib/python3.13/site-packages/flask/app.py:500: in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:362: in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/routing/map.py:629: in match
    raise NotFound() from None
E   werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:333: in test_nodeinfo_wellknown
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:802: in handle_user_exception
    return self.handle_http_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:777: in handle_http_exception
    return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/errors/handlers.py:18: in not_found_error
    return render_template('errors/404.html'), 404
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/templating.py:150: in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/templating.py:127: in _render
    app.update_template_context(context)
/usr/local/lib/python3.13/site-packages/flask/app.py:530: in update_template_context
    context.update(self.ensure_sync(func)())
                   ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_login/utils.py:405: in _user_context_processor
    return dict(current_user=_get_user())
                             ^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_login/utils.py:370: in _get_user
    current_app.login_manager._load_user()
/usr/local/lib/python3.13/site-packages/flask_login/login_manager.py:347: in _load_user
    raise Exception(
E   Exception: Missing user_loader or request_loader. Refer to http://flask-login.readthedocs.io/#how-it-works for more info.</failure></testcase><testcase classname="tests.test_activitypub_routes.TestNodeInfoRoutes" name="test_nodeinfo_2_0" time="0.002"><failure message="AttributeError: type object 'CmsPage' has no attribute 'url'">/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:891: in dispatch_request
    self.raise_routing_exception(req)
/usr/local/lib/python3.13/site-packages/flask/app.py:500: in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:362: in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/routing/map.py:629: in match
    raise NotFound() from None
E   werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:343: in test_nodeinfo_2_0
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:802: in handle_user_exception
    return self.handle_http_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:777: in handle_http_exception
    return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/errors/handlers.py:21: in not_found_error
    cms_page = CmsPage.query.filter(CmsPage.url == request.path).first()
                                    ^^^^^^^^^^^
E   AttributeError: type object 'CmsPage' has no attribute 'url'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestNodeInfoRoutes" name="test_nodeinfo_2_1" time="0.002"><failure message="AttributeError: type object 'CmsPage' has no attribute 'url'">/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:891: in dispatch_request
    self.raise_routing_exception(req)
/usr/local/lib/python3.13/site-packages/flask/app.py:500: in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:362: in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/routing/map.py:629: in match
    raise NotFound() from None
E   werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:355: in test_nodeinfo_2_1
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:802: in handle_user_exception
    return self.handle_http_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:777: in handle_http_exception
    return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/errors/handlers.py:21: in not_found_error
    cms_page = CmsPage.query.filter(CmsPage.url == request.path).first()
                                    ^^^^^^^^^^^
E   AttributeError: type object 'CmsPage' has no attribute 'url'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestWebFingerRoute" name="test_webfinger_user" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 23, 644507), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 23, 644507), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestWebFingerRoute" name="test_webfinger_community" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 4108), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 4108), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestInstanceRoutes" name="test_instance_info" time="0.002"><failure message="Exception: Missing user_loader or request_loader. Refer to http://flask-login.readthedocs.io/#how-it-works for more info.">/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:891: in dispatch_request
    self.raise_routing_exception(req)
/usr/local/lib/python3.13/site-packages/flask/app.py:500: in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:362: in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/routing/map.py:629: in match
    raise NotFound() from None
E   werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:404: in test_instance_info
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:802: in handle_user_exception
    return self.handle_http_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:777: in handle_http_exception
    return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/errors/handlers.py:18: in not_found_error
    return render_template('errors/404.html'), 404
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/templating.py:150: in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/templating.py:127: in _render
    app.update_template_context(context)
/usr/local/lib/python3.13/site-packages/flask/app.py:530: in update_template_context
    context.update(self.ensure_sync(func)())
                   ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_login/utils.py:405: in _user_context_processor
    return dict(current_user=_get_user())
                             ^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_login/utils.py:370: in _get_user
    current_app.login_manager._load_user()
/usr/local/lib/python3.13/site-packages/flask_login/login_manager.py:347: in _load_user
    raise Exception(
E   Exception: Missing user_loader or request_loader. Refer to http://flask-login.readthedocs.io/#how-it-works for more info.</failure></testcase><testcase classname="tests.test_activitypub_routes.TestInstanceRoutes" name="test_instance_peers" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 483688), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 483688), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestBlocklistRoutes" name="test_instance_blocklist" time="0.002"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 850373), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 24, 850373), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_routes.TestErrorHandling" name="test_user_not_found" time="0.002"><failure message="AttributeError: type object 'CmsPage' has no attribute 'url'">/usr/local/lib/python3.13/site-packages/flask/app.py:917: in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:891: in dispatch_request
    self.raise_routing_exception(req)
/usr/local/lib/python3.13/site-packages/flask/app.py:500: in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/ctx.py:362: in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/routing/map.py:629: in match
    raise NotFound() from None
E   werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:470: in test_user_not_found
    ???
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1162: in get
    return self.open(*args, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/testing.py:235: in open
    response = super().open(
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1116: in open
    response_parts = self.run_wsgi_app(request.environ, buffered=buffered)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:988: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/test.py:1264: in run_wsgi_app
    app_rv = app(environ, start_response)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1536: in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/werkzeug/middleware/proxy_fix.py:183: in __call__
    return self.app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1514: in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:1511: in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:919: in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:802: in handle_user_exception
    return self.handle_http_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask/app.py:777: in handle_http_exception
    return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/errors/handlers.py:21: in not_found_error
    cms_page = CmsPage.query.filter(CmsPage.url == request.path).first()
                                    ^^^^^^^^^^^
E   AttributeError: type object 'CmsPage' has no attribute 'url'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestErrorHandling" name="test_invalid_signature" time="0.002"><failure message="AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'">/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:487: in test_invalid_signature
    ???
/usr/local/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestErrorHandling" name="test_malformed_activity" time="0.002"><failure message="AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'">/Users/michael/code/pyfedi/tests/test_activitypub_routes.py:509: in test_malformed_activity
    ???
/usr/local/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.activitypub.routes.inbox' from '/app/app/activitypub/routes/inbox.py'&gt; does not have the attribute 'verify_request'</failure></testcase><testcase classname="tests.test_activitypub_routes.TestContentNegotiation" name="test_html_vs_json_response" time="0.003"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 25, 453257), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:106: in test_instance
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'test.instance', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'pyfedi', 'version': None, 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 25, 453257), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_util" name="test_find_actor_or_create" time="0.006"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column settings.type does not exist&#10;LINE 1: ... settings_name, settings.value AS settings_value, settings.t...&#10;                                                             ^&#10;&#10;[SQL: SELECT settings.name AS settings_name, settings.value AS settings_value, settings.type AS settings_type &#10;FROM settings &#10;WHERE settings.name = %(name_1)s &#10; LIMIT %(param_1)s]&#10;[parameters: {'name_1': 'use_allowlist', 'param_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column settings.type does not exist
E   LINE 1: ... settings_name, settings.value AS settings_value, settings.t...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_util.py:12: in test_find_actor_or_create
    ???
app/activitypub/util.py:339: in find_actor_or_create
    if not validate_remote_actor(actor_url):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/activitypub/actor.py:41: in validate_remote_actor
    if get_setting('use_allowlist', False):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_caching/__init__.py:899: in decorated_function
    rv = self._call_fn(f, *args, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/flask_caching/__init__.py:185: in _call_fn
    return ensure_sync(fn)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/utils.py:240: in get_setting
    setting = Settings.query.filter_by(name=name).first()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:2759: in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:2857: in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column settings.type does not exist
E   LINE 1: ... settings_name, settings.value AS settings_value, settings.t...
E                                                                ^
E   
E   [SQL: SELECT settings.name AS settings_name, settings.value AS settings_value, settings.type AS settings_type 
E   FROM settings 
E   WHERE settings.name = %(name_1)s 
E    LIMIT %(param_1)s]
E   [parameters: {'name_1': 'use_allowlist', 'param_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_like_activity" time="0.082"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 26, 253730), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 26, 253730), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_dislike_activity" time="0.048"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 26, 661289), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 26, 661289), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_create_note_activity" time="0.048"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 72169), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 72169), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_create_article_activity" time="0.058"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 478046), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 478046), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_update_activity" time="0.061"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 887706), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 27, 887706), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_delete_activity" time="0.023"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 28, 273226), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 28, 273226), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_follow_activity" time="0.073"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 28, 703186), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 28, 703186), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_accept_activity" time="0.047"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 119810), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 119810), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_reject_activity" time="0.080"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 563979), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 563979), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_announce_activity" time="0.044"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 959331), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 29, 959331), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_undo_like_activity" time="0.077"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 30, 391824), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 30, 391824), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_undo_follow_activity" time="0.057"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 30, 815326), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 30, 815326), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_flag_activity" time="0.057"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 31, 223293), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 31, 223293), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_add_activity" time="0.069"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 31, 706075), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 31, 706075), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_remove_activity" time="0.095"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 32, 163962), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 32, 163962), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_block_activity" time="0.066"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 32, 584022), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 32, 584022), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_activity_with_invalid_type" time="0.060"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 2893), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 2893), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_activity_missing_required_fields" time="0.107"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 457921), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 457921), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_collection_activities" time="0.066"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 874680), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 33, 874680), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbs" name="test_nested_activities" time="0.040"><error message="failed on setup with &quot;sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column &quot;online&quot; of relation &quot;instance&quot; does not exist&#10;LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...&#10;                                                             ^&#10;&#10;[SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]&#10;[parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 34, 280188), 'updated_at': None}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:77: in setup
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:599: in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
&lt;string&gt;:2: in commit
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
&lt;string&gt;:2: in _prepare_impl
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "online" of relation "instance" does not exist
E   LINE 1: ..., inbox, shared_inbox, outbox, software, version, online, go...
E                                                                ^
E   
E   [SQL: INSERT INTO instance (domain, inbox, shared_inbox, outbox, software, version, online, gone_forever, dormant, trust_level, nodeinfo_href, post_count, user_count, last_seen, last_successful_contact, last_failed_contact, failures, most_recent_attempt, created_at, updated_at) VALUES (%(domain)s, %(inbox)s, %(shared_inbox)s, %(outbox)s, %(software)s, %(version)s, %(online)s, %(gone_forever)s, %(dormant)s, %(trust_level)s, %(nodeinfo_href)s, %(post_count)s, %(user_count)s, %(last_seen)s, %(last_successful_contact)s, %(last_failed_contact)s, %(failures)s, %(most_recent_attempt)s, %(created_at)s, %(updated_at)s) RETURNING instance.id]
E   [parameters: {'domain': 'remote.example', 'inbox': None, 'shared_inbox': None, 'outbox': None, 'software': 'mastodon', 'version': '4.0.0', 'online': True, 'gone_forever': False, 'dormant': False, 'trust_level': 0.0, 'nodeinfo_href': None, 'post_count': 0, 'user_count': 0, 'last_seen': None, 'last_successful_contact': None, 'last_failed_contact': None, 'failures': 0, 'most_recent_attempt': None, 'created_at': datetime.datetime(2025, 8, 1, 22, 29, 34, 280188), 'updated_at': None}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</error></testcase><testcase classname="tests.test_activitypub_verbs_comprehensive.TestActivityPubVerbPriorities" name="test_activity_priorities" time="0.002"><failure message="AssertionError: assert &lt;Priority.BULK: 'bulk'&gt; == &lt;Priority.URGENT: 'urgent'&gt;&#10; +  where &lt;Priority.BULK: 'bulk'&gt; = &lt;function get_activity_priority at 0xffff8de165c0&gt;('Delete')&#10; +    where 'Delete' = &lt;ActivityType.DELETE: 'Delete'&gt;.value&#10; +      where &lt;ActivityType.DELETE: 'Delete'&gt; = ActivityType.DELETE&#10; +  and   &lt;Priority.URGENT: 'urgent'&gt; = &lt;enum 'Priority'&gt;.URGENT">/Users/michael/code/pyfedi/tests/test_activitypub_verbs_comprehensive.py:604: in test_activity_priorities
    ???
E   AssertionError: assert &lt;Priority.BULK: 'bulk'&gt; == &lt;Priority.URGENT: 'urgent'&gt;
E    +  where &lt;Priority.BULK: 'bulk'&gt; = &lt;function get_activity_priority at 0xffff8de165c0&gt;('Delete')
E    +    where 'Delete' = &lt;ActivityType.DELETE: 'Delete'&gt;.value
E    +      where &lt;ActivityType.DELETE: 'Delete'&gt; = ActivityType.DELETE
E    +  and   &lt;Priority.URGENT: 'urgent'&gt; = &lt;enum 'Priority'&gt;.URGENT</failure></testcase><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_angle_brackets_in_blockquote" time="0.003" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_angle_brackets_in_text" time="0.002" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_attributes" time="0.002" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_basic_html" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_community_link_basic_html" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_community_link_code_block" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_community_link_markdown_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_community_link_masto_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_disallowed_tags" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_empty_input" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_feed_link_basic_html" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_feed_link_code_block" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_feed_link_markdown_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_feed_link_masto_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_nested_tags" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_person_link_basic_html" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_person_link_code_block" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_person_link_markdown_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_person_link_masto_link" time="0.001" /><testcase classname="tests.test_allowlist_html.TestAllowlistHtml" name="test_plain_text_urls" time="0.001" /><testcase classname="tests.test_api_community_subscriptions" name="test_api_community_subscriptions" time="0.006"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_community_subscriptions.py:12: in test_api_community_subscriptions
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_get_community" name="test_api_get_community" time="0.002"><failure message="sqlalchemy.exc.InvalidRequestError: Entity namespace for &quot;community&quot; has no property &quot;banned&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/base.py:2193: in _entity_namespace_key
    return getattr(ns, key)  # type: ignore
           ^^^^^^^^^^^^^^^^
E   AttributeError: type object 'Community' has no attribute 'banned'. Did you mean: 'is_banned'?

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_get_community.py:9: in test_api_get_community
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1992: in filter_by
    _entity_namespace_key(from_entity, key) == value
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/base.py:2195: in _entity_namespace_key
    raise exc.InvalidRequestError(
E   sqlalchemy.exc.InvalidRequestError: Entity namespace for "community" has no property "banned"</failure></testcase><testcase classname="tests.test_api_get_site" name="test_api_get_site" time="0.004"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column site.registration_open does not exist&#10;LINE 1: ...pplication_question AS site_application_question, site.regis...&#10;                                                             ^&#10;HINT:  Perhaps you meant to reference the column &quot;site.registration_mode&quot;.&#10;&#10;[SQL: SELECT site.id AS site_id, site.name AS site_name, site.description AS site_description, site.icon_id AS site_icon_id, site.enable_downvotes AS site_enable_downvotes, site.application_question AS site_application_question, site.registration_open AS site_registration_open, site.require_application AS site_require_application, site.enable_federation AS site_enable_federation, site.default_theme AS site_default_theme, site.terms AS site_terms, site.privacy_policy AS site_privacy_policy, site.contact_email AS site_contact_email, site.created_at AS site_created_at, site.updated_at AS site_updated_at &#10;FROM site &#10;WHERE site.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column site.registration_open does not exist
E   LINE 1: ...pplication_question AS site_application_question, site.regis...
E                                                                ^
E   HINT:  Perhaps you meant to reference the column "site.registration_mode".

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_get_site.py:10: in test_api_get_site
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column site.registration_open does not exist
E   LINE 1: ...pplication_question AS site_application_question, site.regis...
E                                                                ^
E   HINT:  Perhaps you meant to reference the column "site.registration_mode".
E   
E   [SQL: SELECT site.id AS site_id, site.name AS site_name, site.description AS site_description, site.icon_id AS site_icon_id, site.enable_downvotes AS site_enable_downvotes, site.application_question AS site_application_question, site.registration_open AS site_registration_open, site.require_application AS site_require_application, site.enable_federation AS site_enable_federation, site.default_theme AS site_default_theme, site.terms AS site_terms, site.privacy_policy AS site_privacy_policy, site.contact_email AS site_contact_email, site.created_at AS site_created_at, site.updated_at AS site_updated_at 
E   FROM site 
E   WHERE site.id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_instance_blocks" name="test_api_instance_blocks" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_instance_blocks.py:13: in test_api_instance_blocks
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_post_bookmarks" name="test_api_post_bookmarks" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_post_bookmarks.py:13: in test_api_post_bookmarks
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_post_subscriptions" name="test_api_post_subscriptions" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_post_subscriptions.py:13: in test_api_post_subscriptions
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_reply_bookmarks" name="test_api_reply_bookmarks" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_reply_bookmarks.py:12: in test_api_reply_bookmarks
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_reply_subscriptions" name="test_api_reply_subscriptions" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_reply_subscriptions.py:12: in test_api_reply_subscriptions
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_api_user_subscriptions" name="test_api_user_subscriptions" time="0.003"><failure message="sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist&#10;LINE 1: ...d AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.sus...&#10;                                                             ^&#10;&#10;[SQL: SELECT &quot;user&quot;.id AS user_id, &quot;user&quot;.user_name AS user_user_name, &quot;user&quot;.alt_user_name AS user_alt_user_name, &quot;user&quot;.email AS user_email, &quot;user&quot;.verified AS user_verified, &quot;user&quot;.banned AS user_banned, &quot;user&quot;.suspended AS user_suspended, &quot;user&quot;.ignore_bots AS user_ignore_bots, &quot;user&quot;.title AS user_title, &quot;user&quot;.about AS user_about, &quot;user&quot;.about_html AS user_about_html, &quot;user&quot;.avatar_id AS user_avatar_id, &quot;user&quot;.cover_id AS user_cover_id, &quot;user&quot;.default_sort AS user_default_sort, &quot;user&quot;.default_filter AS user_default_filter, &quot;user&quot;.theme AS user_theme, &quot;user&quot;.avatar_nsfw AS user_avatar_nsfw, &quot;user&quot;.cover_nsfw AS user_cover_nsfw, &quot;user&quot;.indexable AS user_indexable, &quot;user&quot;.searchable AS user_searchable, &quot;user&quot;.hide_nsfw AS user_hide_nsfw, &quot;user&quot;.hide_nsfl AS user_hide_nsfl, &quot;user&quot;.hide_read_content AS user_hide_read_content, &quot;user&quot;.receive_message_mode AS user_receive_message_mode, &quot;user&quot;.reply_notifications AS user_reply_notifications, &quot;user&quot;.post_count AS user_post_count, &quot;user&quot;.reply_count AS user_reply_count, &quot;user&quot;.post_rating AS user_post_rating, &quot;user&quot;.post_reply_rating AS user_post_reply_rating, &quot;user&quot;.reputation AS user_reputation, &quot;user&quot;.attitude AS user_attitude, &quot;user&quot;.password_hash AS user_password_hash, &quot;user&quot;.last_seen AS user_last_seen, &quot;user&quot;.registered_at AS user_registered_at, &quot;user&quot;.email_visible AS user_email_visible, &quot;user&quot;.birthday AS user_birthday, &quot;user&quot;.totp_secret AS user_totp_secret, &quot;user&quot;.totp_enabled AS user_totp_enabled, &quot;user&quot;.totp_recovery_codes AS user_totp_recovery_codes, &quot;user&quot;.ap_domain AS user_ap_domain, &quot;user&quot;.ap_preferred_username AS user_ap_preferred_username, &quot;user&quot;.private_key AS user_private_key, &quot;user&quot;.public_key AS user_public_key, &quot;user&quot;.instance_id AS user_instance_id, &quot;user&quot;.bot AS user_bot, &quot;user&quot;.created_at AS user_created_at, &quot;user&quot;.updated_at AS user_updated_at, &quot;user&quot;.ap_id AS user_ap_id, &quot;user&quot;.ap_profile_id AS user_ap_profile_id, &quot;user&quot;.ap_public_url AS user_ap_public_url, &quot;user&quot;.ap_fetched_at AS user_ap_fetched_at, &quot;user&quot;.ap_followers_url AS user_ap_followers_url, &quot;user&quot;.ap_inbox_url AS user_ap_inbox_url, &quot;user&quot;.ap_outbox_url AS user_ap_outbox_url, &quot;user&quot;.language AS user_language &#10;FROM &quot;user&quot; &#10;WHERE &quot;user&quot;.id = %(pk_1)s]&#10;[parameters: {'pk_1': 1}]&#10;(Background on this error at: https://sqlalche.me/e/20/f405)">/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   psycopg2.errors.UndefinedColumn: column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/test_api_user_subscriptions.py:12: in test_api_user_subscriptions
    ???
&lt;string&gt;:2: in get
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:386: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1126: in get
    return self._get_impl(ident, loading.load_on_pk_identity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/query.py:1135: in _get_impl
    return self.session._get_impl(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:3873: in _get_impl
    return db_load_fn(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/loading.py:694: in load_on_pk_identity
    session.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column user.suspended does not exist
E   LINE 1: ...d AS user_verified, "user".banned AS user_banned, "user".sus...
E                                                                ^
E   
E   [SQL: SELECT "user".id AS user_id, "user".user_name AS user_user_name, "user".alt_user_name AS user_alt_user_name, "user".email AS user_email, "user".verified AS user_verified, "user".banned AS user_banned, "user".suspended AS user_suspended, "user".ignore_bots AS user_ignore_bots, "user".title AS user_title, "user".about AS user_about, "user".about_html AS user_about_html, "user".avatar_id AS user_avatar_id, "user".cover_id AS user_cover_id, "user".default_sort AS user_default_sort, "user".default_filter AS user_default_filter, "user".theme AS user_theme, "user".avatar_nsfw AS user_avatar_nsfw, "user".cover_nsfw AS user_cover_nsfw, "user".indexable AS user_indexable, "user".searchable AS user_searchable, "user".hide_nsfw AS user_hide_nsfw, "user".hide_nsfl AS user_hide_nsfl, "user".hide_read_content AS user_hide_read_content, "user".receive_message_mode AS user_receive_message_mode, "user".reply_notifications AS user_reply_notifications, "user".post_count AS user_post_count, "user".reply_count AS user_reply_count, "user".post_rating AS user_post_rating, "user".post_reply_rating AS user_post_reply_rating, "user".reputation AS user_reputation, "user".attitude AS user_attitude, "user".password_hash AS user_password_hash, "user".last_seen AS user_last_seen, "user".registered_at AS user_registered_at, "user".email_visible AS user_email_visible, "user".birthday AS user_birthday, "user".totp_secret AS user_totp_secret, "user".totp_enabled AS user_totp_enabled, "user".totp_recovery_codes AS user_totp_recovery_codes, "user".ap_domain AS user_ap_domain, "user".ap_preferred_username AS user_ap_preferred_username, "user".private_key AS user_private_key, "user".public_key AS user_public_key, "user".instance_id AS user_instance_id, "user".bot AS user_bot, "user".created_at AS user_created_at, "user".updated_at AS user_updated_at, "user".ap_id AS user_ap_id, "user".ap_profile_id AS user_ap_profile_id, "user".ap_public_url AS user_ap_public_url, "user".ap_fetched_at AS user_ap_fetched_at, "user".ap_followers_url AS user_ap_followers_url, "user".ap_inbox_url AS user_ap_inbox_url, "user".ap_outbox_url AS user_ap_outbox_url, "user".language AS user_language 
E   FROM "user" 
E   WHERE "user".id = %(pk_1)s]
E   [parameters: {'pk_1': 1}]
E   (Background on this error at: https://sqlalche.me/e/20/f405)</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_wait_for_postgres_success" time="0.002" /><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_wait_for_postgres_retry" time="0.002"><failure message="Exception: Connection refused">/Users/michael/code/pyfedi/tests/test_database_management.py:49: in test_wait_for_postgres_retry
    ???
scripts/init_db.py:57: in wait_for_postgres
    conn = psycopg2.connect(
/usr/local/lib/python3.13/unittest/mock.py:1169: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1173: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1232: in _execute_mock_call
    raise result
E   Exception: Connection refused</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_wait_for_postgres_timeout" time="0.002"><failure message="Exception: Connection refused">/Users/michael/code/pyfedi/tests/test_database_management.py:61: in test_wait_for_postgres_timeout
    ???
scripts/init_db.py:57: in wait_for_postgres
    conn = psycopg2.connect(
/usr/local/lib/python3.13/unittest/mock.py:1169: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1173: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/unittest/mock.py:1228: in _execute_mock_call
    raise effect
E   Exception: Connection refused</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_create_database_if_needed_exists" time="0.002" /><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_create_database_if_needed_create" time="0.002"><failure message="NameError: name 'psycopg2' is not defined">/Users/michael/code/pyfedi/tests/test_database_management.py:88: in test_create_database_if_needed_create
    ???
E   NameError: name 'psycopg2' is not defined</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_run_migrations" time="0.002"><failure message="assert False is True">/Users/michael/code/pyfedi/tests/test_database_management.py:108: in test_run_migrations
    ???
E   assert False is True</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_run_migrations_failure" time="0.002" /><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_seed_initial_data_with_env_vars" time="0.003"><failure message="TypeError: 'Mock' object does not support the context manager protocol">/Users/michael/code/pyfedi/tests/test_database_management.py:151: in test_seed_initial_data_with_env_vars
    ???
scripts/init_db.py:215: in seed_initial_data
    with app.app_context():
         ^^^^^^^^^^^^^^^^^
E   TypeError: 'Mock' object does not support the context manager protocol</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_main_non_interactive_mode" time="0.004"><failure message="AssertionError: expected call not found.&#10;Expected: exit(0)&#10;  Actual: exit(2)&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert (2,) == (0,)&#10;  &#10;  At index 0 diff: 2 != 0&#10;  &#10;  Full diff:&#10;    (&#10;  -     0,&#10;  ?     ^...&#10;  &#10;  ...Full output truncated (3 lines hidden), use '-vv' to show">/usr/local/lib/python3.13/unittest/mock.py:979: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: exit(0)
E     Actual: exit(2)

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_database_management.py:202: in test_main_non_interactive_mode
    ???
E   AssertionError: expected call not found.
E   Expected: exit(0)
E     Actual: exit(2)
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (2,) == (0,)
E     
E     At index 0 diff: 2 != 0
E     
E     Full diff:
E       (
E     -     0,
E     ?     ^...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_database_management.TestDatabaseInitialization" name="test_main_skip_seed_data" time="0.003" /><testcase classname="tests.test_database_management.TestDatabaseMigrations" name="test_peachpie_schema_improvements" time="0.003" /><testcase classname="tests.test_database_management.TestDatabaseMigrations" name="test_pyfedi_to_peachpie_data_migration" time="0.001" /><testcase classname="tests.test_database_management.TestEnvironmentConfiguration" name="test_redis_url_consolidation" time="0.002"><failure message="AssertionError: assert 'redis://test-redis:6379/0' == 'redis://localhost:6379/0'&#10;  &#10;  - redis://localhost:6379/0&#10;  + redis://test-redis:6379/0">/Users/michael/code/pyfedi/tests/test_database_management.py:292: in test_redis_url_consolidation
    ???
E   AssertionError: assert 'redis://test-redis:6379/0' == 'redis://localhost:6379/0'
E     
E     - redis://localhost:6379/0
E     + redis://test-redis:6379/0</failure></testcase><testcase classname="tests.test_database_management.TestEnvironmentConfiguration" name="test_software_branding_configuration" time="0.002"><failure message="AssertionError: assert '1.0.1-202501...-theatlsocial' == '2.0.0'&#10;  &#10;  - 2.0.0&#10;  + 1.0.1-20250124-nightly-theatlsocial">/Users/michael/code/pyfedi/tests/test_database_management.py:311: in test_software_branding_configuration
    ???
E   AssertionError: assert '1.0.1-202501...-theatlsocial' == '2.0.0'
E     
E     - 2.0.0
E     + 1.0.1-20250124-nightly-theatlsocial</failure></testcase><testcase classname="tests.test_database_management.TestEnvironmentConfiguration" name="test_rate_limit_configuration" time="0.002" /><testcase classname="tests.test_database_management.TestDatabasePerformance" name="test_index_creation" time="0.001" /><testcase classname="tests.test_database_management.TestDatabasePerformance" name="test_varchar_to_text_conversion" time="0.002"><failure message="AssertionError: assert (False or False or 'outbox' == 'inbox'&#10; +  where False = &lt;built-in method endswith of str object at 0xffff941475d0&gt;('_url')&#10; +    where &lt;built-in method endswith of str object at 0xffff941475d0&gt; = 'outbox'.endswith&#10; +  and   False = &lt;built-in method endswith of str object at 0xffff941475d0&gt;('_id')&#10; +    where &lt;built-in method endswith of str object at 0xffff941475d0&gt; = 'outbox'.endswith&#10;  &#10;  - inbox&#10;  + outbox)">/Users/michael/code/pyfedi/tests/test_database_management.py:376: in test_varchar_to_text_conversion
    ???
E   AssertionError: assert (False or False or 'outbox' == 'inbox'
E    +  where False = &lt;built-in method endswith of str object at 0xffff941475d0&gt;('_url')
E    +    where &lt;built-in method endswith of str object at 0xffff941475d0&gt; = 'outbox'.endswith
E    +  and   False = &lt;built-in method endswith of str object at 0xffff941475d0&gt;('_id')
E    +    where &lt;built-in method endswith of str object at 0xffff941475d0&gt; = 'outbox'.endswith
E     
E     - inbox
E     + outbox)</failure></testcase><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_basic_dedupe" time="0.002" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_empty_input" time="0.001" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_low_value_reposter_cross_posts" time="0.002" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_mixed_scenarios" time="0.002" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_no_cross_posts_found" time="0.002" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_performance_with_1000_posts" time="0.002" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_priority_prevents_filtering" time="0.001" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_regular_cross_posts" time="0.001" /><testcase classname="tests.test_dedupe_post_ids.TestDudupePostIds" name="test_worst_case_performance" time="0.042" /><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_health_monitor_initialization" time="0.001"><error message="failed on setup with &quot;OSError: could not get source code&quot;">/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:866: in pytest_fixture_setup
    _, fixture_line_number = inspect.getsourcelines(fixturedef.func)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/inspect.py:1240: in getsourcelines
    lines, lnum = findsource(object)
                  ^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/inspect.py:1080: in findsource
    raise OSError('could not get source code')
E   OSError: could not get source code</error></testcase><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_record_success" time="0.010"><failure message="TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:42: in test_record_success
    ???
E   TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_record_failure" time="0.010"><failure message="TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:60: in test_record_failure
    ???
E   TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_circuit_breaker_logic" time="0.009"><failure message="TypeError: InstanceHealthMonitor.__init__() got an unexpected keyword argument 'failure_threshold'">/Users/michael/code/pyfedi/tests/test_federation_components.py:80: in test_circuit_breaker_logic
    ???
E   TypeError: InstanceHealthMonitor.__init__() got an unexpected keyword argument 'failure_threshold'</failure></testcase><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_circuit_breaker_recovery" time="0.009"><failure message="TypeError: InstanceHealthMonitor.__init__() got an unexpected keyword argument 'recovery_threshold'">/Users/michael/code/pyfedi/tests/test_federation_components.py:106: in test_circuit_breaker_recovery
    ???
E   TypeError: InstanceHealthMonitor.__init__() got an unexpected keyword argument 'recovery_threshold'</failure></testcase><testcase classname="tests.test_federation_components.TestInstanceHealthMonitor" name="test_get_instance_health" time="0.010"><failure message="TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:138: in test_get_instance_health
    ???
E   TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_rate_limiter_initialization" time="0.011"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:154: in test_rate_limiter_initialization
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_check_rate_limit_allowed" time="0.009"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:164: in test_check_rate_limit_allowed
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_check_rate_limit_exceeded" time="0.009"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:182: in test_check_rate_limit_exceeded
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_burst_allowance" time="0.009"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:199: in test_burst_allowance
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_adaptive_rate_limiting" time="0.009"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:221: in test_adaptive_rate_limiting
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_rate_limit_reset" time="0.010"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:244: in test_rate_limit_reset
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestDestinationRateLimiter" name="test_global_rate_limit" time="0.009"><failure message="TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:256: in test_global_rate_limit
    ???
E   TypeError: DestinationRateLimiter.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_scheduler_initialization" time="0.009" /><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_schedule_cron_task" time="0.009"><failure message="AttributeError: 'str' object has no attribute 'utc'">/Users/michael/code/pyfedi/tests/test_federation_components.py:290: in test_schedule_cron_task
    ???
app/federation/scheduler.py:191: in schedule_task
    created_at=datetime.now(timezone.utc),
                            ^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'utc'</failure></testcase><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_schedule_interval_task" time="0.010"><failure message="AttributeError: 'str' object has no attribute 'utc'">/Users/michael/code/pyfedi/tests/test_federation_components.py:315: in test_schedule_interval_task
    ???
app/federation/scheduler.py:191: in schedule_task
    created_at=datetime.now(timezone.utc),
                            ^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'utc'</failure></testcase><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_execute_due_task" time="0.010" /><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_pause_resume_task" time="0.009" /><testcase classname="tests.test_federation_components.TestTaskScheduler" name="test_task_failure_handling" time="0.010" /><testcase classname="tests.test_federation_components.TestMaintenanceProcessor" name="test_processor_initialization" time="0.009"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'aiosqlite'&quot;">/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:329: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup_task)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/asyncio/base_events.py:725: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:324: in setup
    res = await gen_obj.__anext__()  # type: ignore[union-attr]
          ^^^^^^^^^^^^^^^^^^^^^^^^^
/Users/michael/code/pyfedi/tests/conftest.py:189: in async_session
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:120: in create_async_engine
    sync_engine = _create_engine(url, **kw)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:281: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/create.py:602: in create_engine
    dbapi = dbapi_meth(**dbapi_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py:376: in import_dbapi
    __import__("aiosqlite"), __import__("sqlite3")
    ^^^^^^^^^^^^^^^^^^^^^^^
E   ModuleNotFoundError: No module named 'aiosqlite'</error></testcase><testcase classname="tests.test_federation_components.TestMaintenanceProcessor" name="test_cleanup_old_activities" time="0.009"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'aiosqlite'&quot;">/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:329: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup_task)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/asyncio/base_events.py:725: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:324: in setup
    res = await gen_obj.__anext__()  # type: ignore[union-attr]
          ^^^^^^^^^^^^^^^^^^^^^^^^^
/Users/michael/code/pyfedi/tests/conftest.py:189: in async_session
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:120: in create_async_engine
    sync_engine = _create_engine(url, **kw)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:281: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/create.py:602: in create_engine
    dbapi = dbapi_meth(**dbapi_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py:376: in import_dbapi
    __import__("aiosqlite"), __import__("sqlite3")
    ^^^^^^^^^^^^^^^^^^^^^^^
E   ModuleNotFoundError: No module named 'aiosqlite'</error></testcase><testcase classname="tests.test_federation_components.TestMaintenanceProcessor" name="test_update_instance_stats" time="0.010"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'aiosqlite'&quot;">/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:329: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup_task)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/asyncio/base_events.py:725: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:324: in setup
    res = await gen_obj.__anext__()  # type: ignore[union-attr]
          ^^^^^^^^^^^^^^^^^^^^^^^^^
/Users/michael/code/pyfedi/tests/conftest.py:189: in async_session
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:120: in create_async_engine
    sync_engine = _create_engine(url, **kw)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:281: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/create.py:602: in create_engine
    dbapi = dbapi_meth(**dbapi_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py:376: in import_dbapi
    __import__("aiosqlite"), __import__("sqlite3")
    ^^^^^^^^^^^^^^^^^^^^^^^
E   ModuleNotFoundError: No module named 'aiosqlite'</error></testcase><testcase classname="tests.test_federation_components.TestMaintenanceProcessor" name="test_message_routing" time="0.010"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'aiosqlite'&quot;">/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:329: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup_task)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/asyncio/base_events.py:725: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/pytest_asyncio/plugin.py:324: in setup
    res = await gen_obj.__anext__()  # type: ignore[union-attr]
          ^^^^^^^^^^^^^^^^^^^^^^^^^
/Users/michael/code/pyfedi/tests/conftest.py:189: in async_session
    ???
/usr/local/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:120: in create_async_engine
    sync_engine = _create_engine(url, **kw)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/deprecations.py:281: in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/create.py:602: in create_engine
    dbapi = dbapi_meth(**dbapi_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py:376: in import_dbapi
    __import__("aiosqlite"), __import__("sqlite3")
    ^^^^^^^^^^^^^^^^^^^^^^^
E   ModuleNotFoundError: No module named 'aiosqlite'</error></testcase><testcase classname="tests.test_federation_components.TestIntegrationScenarios" name="test_health_and_rate_limit_integration" time="0.009"><failure message="TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given">/Users/michael/code/pyfedi/tests/test_federation_components.py:518: in test_health_and_rate_limit_integration
    ???
E   TypeError: InstanceHealthMonitor.__init__() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.test_federation_components.TestIntegrationScenarios" name="test_scheduler_creates_maintenance_tasks" time="0.010"><failure message="AttributeError: 'str' object has no attribute 'utc'">/Users/michael/code/pyfedi/tests/test_federation_components.py:546: in test_scheduler_creates_maintenance_tasks
    ???
app/federation/scheduler.py:191: in schedule_task
    created_at=datetime.now(timezone.utc),
                            ^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'utc'</failure></testcase><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_angle_brackets" time="0.006" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_angle_brackets_in_blockquote" time="0.003" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_basic_markdown" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_blockquote" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_code_blocks" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_complex_markdown_with_angle_brackets" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_disallowed_tags" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_double_bold" time="0.003" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_gt_lt_in_code" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_gt_lt_in_code_block" time="0.002" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_links" time="0.001" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_lists" time="0.004" /><testcase classname="tests.test_markdown_to_html.TestMarkdownToHtml" name="test_paragraphs" time="0.001" /><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_producer_sync_operations" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_producer_batch_operations" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_rate_limiter_pipeline" time="0.003"><failure message="redis.exceptions.ResponseError: Missing library metadata">/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:71: in test_rate_limiter_pipeline
    ???
app/federation/rate_limiter.py:77: in __init__
    self.redis7 = get_redis7_functions(self.redis_client)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/federation/redis_functions.py:255: in get_redis7_functions
    if functions.load_functions():
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/federation/redis_functions.py:150: in load_functions
    self.redis.function_load(RATE_LIMIT_FUNCTION, replace=True)
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:6363: in function_load
    return self.execute_command("FUNCTION LOAD", *pieces)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:567: in _execute_command
    return conn.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:568: in &lt;lambda&gt;
    lambda: self._send_command_parse_response(
/usr/local/lib/python3.13/site-packages/redis/client.py:542: in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:584: in parse_response
    response = connection.read_response()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:616: in read_response
    raise response
E   redis.exceptions.ResponseError: Missing library metadata</failure></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_redis7_functions" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_stream_operations" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_pipeline_performance" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_redis_datatypes" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisIntegration" name="test_expiry_operations" time="0.002"><error message="failed on setup with &quot;redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.&quot;">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:24: in redis_client
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:941: in flushdb
    return self.execute_command("FLUSHDB", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</error></testcase><testcase classname="tests.test_redis_py_integration.TestRedisCompatibility" name="test_decode_responses" time="0.002"><failure message="redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:214: in test_decode_responses
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:2335: in set
    return self.execute_command("SET", *pieces, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</failure></testcase><testcase classname="tests.test_redis_py_integration.TestRedisCompatibility" name="test_connection_pool" time="0.002"><failure message="redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.">/usr/local/lib/python3.13/site-packages/redis/connection.py:357: in connect
    sock = self.retry.call_with_retry(
/usr/local/lib/python3.13/site-packages/redis/retry.py:62: in call_with_retry
    return do()
           ^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:358: in &lt;lambda&gt;
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:730: in _connect
    raise err
/usr/local/lib/python3.13/site-packages/redis/connection.py:718: in _connect
    sock.connect(socket_address)
E   ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:
/Users/michael/code/pyfedi/tests/test_redis_py_integration.py:228: in test_connection_pool
    ???
/usr/local/lib/python3.13/site-packages/redis/commands/core.py:2335: in set
    return self.execute_command("SET", *pieces, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:559: in execute_command
    return self._execute_command(*args, **options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/client.py:565: in _execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/redis/connection.py:1422: in get_connection
    connection.connect()
/usr/local/lib/python3.13/site-packages/redis/connection.py:363: in connect
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 111 connecting to localhost:6379. Connection refused.</failure></testcase><testcase classname="tests.test_redis_py_integration.TestRedisCompatibility" name="test_redis_url_parsing" time="0.002" /><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_create_note_activity" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_like_activity_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_dislike_activity_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_undo_activity_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_follow_activity_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCoreOperations" name="test_announce_activity_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_inbound_like" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_inbound_dislike" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_inbound_undo_like" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_create_note" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_update_note" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestInboundActivityProcessing" name="test_process_delete_activity" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestVoteSuspenseQueue" name="test_vote_queued_when_post_not_found" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestVoteSuspenseQueue" name="test_queued_votes_processed_when_post_arrives" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestVoteSuspenseQueue" name="test_vote_suspense_queue_expiry" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubDelivery" name="test_deliver_activity_with_signature" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubDelivery" name="test_delivery_retry_on_failure" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubDelivery" name="test_shared_inbox_optimization" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCompat" name="test_mastodon_vote_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCompat" name="test_lemmy_vote_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCompat" name="test_peertube_dislike_format" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestActivityPubCompat" name="test_flexible_object_reference_parsing" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestEdgeCases" name="test_handle_unknown_activity_type" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestEdgeCases" name="test_handle_malformed_actor_id" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestEdgeCases" name="test_handle_recursive_announces" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestEdgeCases" name="test_handle_future_dated_activities" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestPerformanceRegression" name="test_batch_delivery_performance" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestPerformanceRegression" name="test_vote_processing_performance" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_activitypub_integration.TestPerformanceRegression" name="test_signature_verification_caching" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_actor_creation_within_limits_allowed" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_hourly_limit_exceeded_blocks_creation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_daily_limit_exceeded_blocks_creation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_global_limit_protects_system" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_suspicious_instance_blocked" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_duplicate_actor_prevented" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestActorCreationLimits" name="test_rate_limit_tracking" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_relay_detection_by_software" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_relay_detection_by_url_pattern" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_relay_cannot_amplify_votes" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_relay_cannot_amplify_moderation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_announce_depth_limit" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_relay_rate_limiting" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestRelayProtection" name="test_vote_rate_limiting_per_actor" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_valid_media_url_generates_proxy_url" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_private_ip_media_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_signature_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_expired_proxy_url_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_content_type_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestMediaProxySecurity" name="test_ssrf_adapter_blocks_private_ips" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestPermissionValidation" name="test_admin_has_all_permissions" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestPermissionValidation" name="test_member_cannot_moderate" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestPermissionValidation" name="test_cannot_modify_others_content" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestPermissionValidation" name="test_group_activity_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestPermissionValidation" name="test_cannot_remove_last_admin" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestSecureErrorHandling" name="test_database_errors_sanitized" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestSecureErrorHandling" name="test_file_paths_removed" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestSecureErrorHandling" name="test_consistent_error_messages" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestSecureErrorHandling" name="test_activitypub_errors_handled" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestSecureErrorHandling" name="test_stack_trace_sanitization" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestIntegration" name="test_actor_creation_full_flow" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestIntegration" name="test_relay_announce_processing" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestIntegration" name="test_media_proxy_request_flow" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestIntegration" name="test_permission_checks_in_routes" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_high_vulnerabilities.TestIntegration" name="test_error_handling_in_production" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_normal_json_parsing" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_empty_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_oversized_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_deeply_nested_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_json_bomb_key_explosion_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_array_bomb_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_prototype_pollution_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_constructor_manipulation_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_invalid_float_values_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_malformed_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_unicode_handling" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestSafeJSONParser" name="test_complex_valid_activitypub_object" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestActivityPubValidation" name="test_valid_activitypub_object" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestActivityPubValidation" name="test_missing_type_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestActivityPubValidation" name="test_invalid_type_field_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestActivityPubValidation" name="test_invalid_id_field_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestActivityPubValidation" name="test_invalid_actor_field_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestJSONAttackVectors" name="test_billion_laughs_attack" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestJSONAttackVectors" name="test_hash_collision_attack" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_json_validator.TestJSONAttackVectors" name="test_recursive_reference_simulation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_valid_signed_request_accepted" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_oversized_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_malformed_json_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_unsigned_request_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_rate_limiting_enforced" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecureActivityPubRoutes" name="test_uri_validation_performed" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestInboxProcessingSecurity" name="test_create_with_string_object_requires_signature" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestInboxProcessingSecurity" name="test_announce_with_nested_object_validated" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecurityLogging" name="test_failed_signature_logged" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestSecurityLogging" name="test_json_bomb_attempt_logged" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestActivityTypeHandling" name="test_delete_activity_authorization" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestActivityTypeHandling" name="test_update_activity_authorization" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestActivityTypeHandling" name="test_follow_activity_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestErrorHandling" name="test_no_information_disclosure_in_errors" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_secure_routes.TestErrorHandling" name="test_consistent_error_responses" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_unsigned_request_rejected_by_default" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_valid_http_signature_accepted" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_invalid_http_signature_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_no_fallback_to_ld_signature_with_http_signature_present" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_ld_signature_only_when_no_http_signature" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_stale_date_header_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_future_date_header_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_allowlist_not_checked_by_default" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_allowlist_requires_exact_match" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_instance_failure_tracking" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_excessive_failures_logged" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_ld_signature_validation_checks_fields" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestSignatureValidator" name="test_request_caching" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestAuthenticationBypassScenarios" name="test_cannot_bypass_with_create_string_object" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestAuthenticationBypassScenarios" name="test_cannot_bypass_with_invalid_ld_signature" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestAuthenticationBypassScenarios" name="test_cannot_spoof_signature_header" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_signature_validator.TestAuthenticationBypassScenarios" name="test_no_unsigned_activities_without_explicit_config" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_detects_string_formatting_in_execute" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_detects_fstring_in_execute" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_detects_string_concatenation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_detects_format_method" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_detects_dynamic_table_names" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_safe_parameterized_queries_not_flagged" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_orm_usage_not_flagged" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_text_with_parameters_considered_safe" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_severity_classification" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionAuditor" name="test_context_extraction" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPatterns" name="test_union_injection_pattern" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPatterns" name="test_blind_injection_pattern" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPatterns" name="test_second_order_injection" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPrevention" name="test_parameterized_query_prevents_injection" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPrevention" name="test_input_validation_for_dynamic_queries" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionPrevention" name="test_escape_like_wildcards" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestRealWorldSQLInjectionScenarios" name="test_activitypub_actor_search_injection" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestRealWorldSQLInjectionScenarios" name="test_federation_stats_aggregation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionReporting" name="test_report_generation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_sql_injection.TestSQLInjectionReporting" name="test_fix_suggestions" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_valid_https_uri_accepted" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_empty_uri_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_oversized_uri_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_dangerous_schemes_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_missing_scheme_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_missing_hostname_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_localhost_variants_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_private_ip_ranges_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_blocked_ports_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_dns_rebinding_protection" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_suspicious_patterns_rejected" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_hostname_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_activitypub_context_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_uri_normalization" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_same_origin_check" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestURIValidator" name="test_batch_validation" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestSSRFAttackVectors" name="test_cloud_metadata_endpoints_blocked" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestSSRFAttackVectors" name="test_bypass_attempts_blocked" time="0.000"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error></testcase><testcase classname="tests.test_security.test_uri_validator.TestSSRFAttackVectors" name="test_redirect_chains_not_followed" time="0.016"><error message="failed on setup with &quot;Failed: ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:&#10;/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)&#10;Requested fixture:&#10;/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()&quot;">ScopeMismatch: You tried to access the function scoped fixture app with a session scoped request object. Requesting fixture stack:
/Users/michael/code/pyfedi/tests/conftest.py:40:  def _db(app)
Requested fixture:
/Users/michael/code/pyfedi/tests/test_security/conftest.py:11:  def app()</error><error message="failed on teardown with &quot;sqlalchemy.exc.CircularDependencyError: Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables: chat_message, conversation.  Please ensure that the ForeignKey and ForeignKeyConstraint objects involved in the cycle have names so that they can be dropped using DROP CONSTRAINT.&quot;">/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:1401: in sort_tables_and_constraints
    candidate_sort = list(
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/topological.py:73: in sort
    for set_ in sort_as_subsets(tuples, allitems):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/topological.py:47: in sort_as_subsets
    raise CircularDependencyError(
E   sqlalchemy.exc.CircularDependencyError: Circular dependency detected. (Table('conversation', MetaData(), Column('id', Integer(), table=&lt;conversation&gt;, primary_key=True, nullable=False), Column('user1_id', Integer(), ForeignKey('user.id'), table=&lt;conversation&gt;, nullable=False), Column('user2_id', Integer(), ForeignKey('user.id'), table=&lt;conversation&gt;, nullable=False), Column('user1_deleted', Boolean(), table=&lt;conversation&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('user2_deleted', Boolean(), table=&lt;conversation&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('last_message_id', Integer(), ForeignKey('chat_message.id'), table=&lt;conversation&gt;), Column('created_at', DateTime(), table=&lt;conversation&gt;, nullable=False, default=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8b80&gt;)), Column('updated_at', DateTime(), table=&lt;conversation&gt;, onupdate=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8cc0&gt;)), schema=None), Table('chat_message', MetaData(), Column('id', Integer(), table=&lt;chat_message&gt;, primary_key=True, nullable=False), Column('conversation_id', Integer(), ForeignKey('conversation.id'), table=&lt;chat_message&gt;, nullable=False), Column('sender_id', Integer(), ForeignKey('user.id'), table=&lt;chat_message&gt;, nullable=False), Column('body', Text(), table=&lt;chat_message&gt;, nullable=False), Column('body_html', Text(), table=&lt;chat_message&gt;, nullable=False), Column('read', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('read_at', DateTime(), table=&lt;chat_message&gt;), Column('sender_deleted', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('recipient_deleted', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('created_at', DateTime(), table=&lt;chat_message&gt;, nullable=False, default=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8b80&gt;)), Column('updated_at', DateTime(), table=&lt;chat_message&gt;, onupdate=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8cc0&gt;)), schema=None))

During handling of the above exception, another exception occurred:
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:1085: in visit_metadata
    sort_tables_and_constraints(
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:1432: in sort_tables_and_constraints
    candidate_sort = list(
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/topological.py:73: in sort
    for set_ in sort_as_subsets(tuples, allitems):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/util/topological.py:47: in sort_as_subsets
    raise CircularDependencyError(
E   sqlalchemy.exc.CircularDependencyError: Circular dependency detected. (Table('conversation', MetaData(), Column('id', Integer(), table=&lt;conversation&gt;, primary_key=True, nullable=False), Column('user1_id', Integer(), ForeignKey('user.id'), table=&lt;conversation&gt;, nullable=False), Column('user2_id', Integer(), ForeignKey('user.id'), table=&lt;conversation&gt;, nullable=False), Column('user1_deleted', Boolean(), table=&lt;conversation&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('user2_deleted', Boolean(), table=&lt;conversation&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('last_message_id', Integer(), ForeignKey('chat_message.id'), table=&lt;conversation&gt;), Column('created_at', DateTime(), table=&lt;conversation&gt;, nullable=False, default=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8b80&gt;)), Column('updated_at', DateTime(), table=&lt;conversation&gt;, onupdate=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8cc0&gt;)), schema=None), Table('chat_message', MetaData(), Column('id', Integer(), table=&lt;chat_message&gt;, primary_key=True, nullable=False), Column('conversation_id', Integer(), ForeignKey('conversation.id'), table=&lt;chat_message&gt;, nullable=False), Column('sender_id', Integer(), ForeignKey('user.id'), table=&lt;chat_message&gt;, nullable=False), Column('body', Text(), table=&lt;chat_message&gt;, nullable=False), Column('body_html', Text(), table=&lt;chat_message&gt;, nullable=False), Column('read', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('read_at', DateTime(), table=&lt;chat_message&gt;), Column('sender_deleted', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('recipient_deleted', Boolean(), table=&lt;chat_message&gt;, nullable=False, default=ScalarElementColumnDefault(False)), Column('created_at', DateTime(), table=&lt;chat_message&gt;, nullable=False, default=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8b80&gt;)), Column('updated_at', DateTime(), table=&lt;chat_message&gt;, onupdate=CallableColumnDefault(&lt;function datetime.utcnow at 0xffff8fdb8cc0&gt;)), schema=None))

The above exception was the direct cause of the following exception:
/Users/michael/code/pyfedi/tests/conftest.py:47: in _db
    ???
/usr/local/lib/python3.13/site-packages/flask_sqlalchemy/extension.py:917: in drop_all
    self._call_for_binds(bind_key, "drop_all")
/usr/local/lib/python3.13/site-packages/flask_sqlalchemy/extension.py:881: in _call_for_binds
    getattr(metadata, op_name)(bind=engine)
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/schema.py:5952: in drop_all
    bind._run_ddl_visitor(
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:3248: in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
/usr/local/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2455: in _run_ddl_visitor
    ).traverse_single(element)
      ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/visitors.py:664: in traverse_single
    return meth(obj, **kw)
           ^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:1111: in visit_metadata
    raise exc.CircularDependencyError(
E   sqlalchemy.exc.CircularDependencyError: Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables: chat_message, conversation.  Please ensure that the ForeignKey and ForeignKeyConstraint objects involved in the cycle have names so that they can be dropped using DROP CONSTRAINT.</error></testcase></testsuite></testsuites>